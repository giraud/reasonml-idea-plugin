package com.reason.lang.ocaml;

import com.intellij.psi.*;
import com.intellij.psi.util.*;
import com.reason.lang.core.psi.*;
import com.reason.lang.core.psi.impl.*;

import java.util.*;

public class LocalOpenTest extends OclParsingTestCase {
  public void test_localOpen() {
    PsiFile fileModule = parseCode("Int64.(x + y / of_int 2) let x = 1");
    PsiLocalOpen localOpen = PsiTreeUtil.findChildOfType(fileModule, PsiLocalOpen.class);
    assertEquals("(x + y / of_int 2)", localOpen.getText());
  }

  public void test_notLocalOpen() {
    PsiElement expression = firstElement(parseCode("Js.log(\"nok\")"));
    assertFalse(expression instanceof PsiLocalOpen);
  }


  // https://github.com/reasonml-editor/reasonml-idea-plugin/issues/294
  public void test_GH_294() {
    Collection<PsiNamedElement> es = expressions(parseCode("let x = let open P in function | A -> true | _ -> false"));

    assertSize(1, es);
    PsiLet e = (PsiLet) es.iterator().next();
    assertEquals("let open P in function | A -> true | _ -> false", e.getBinding().getText());
    assertEquals("P", PsiTreeUtil.findChildOfType(e, PsiOpen.class).getQualifiedName());
  }
}
