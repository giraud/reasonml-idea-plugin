"use strict";(self.webpackChunk_reasonml_idea_plugin_website=self.webpackChunk_reasonml_idea_plugin_website||[]).push([[495],{4137:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),s=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,y=d["".concat(a,".").concat(f)]||d[f]||u[f]||i;return r?n.createElement(y,c(c({ref:t},l),{},{components:r})):n.createElement(y,c({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=d;var p={};for(var a in t)hasOwnProperty.call(t,a)&&(p[a]=t[a]);p.originalType=e,p.mdxType="string"==typeof e?e:o,c[1]=p;for(var s=2;s<i;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1354:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return p},contentTitle:function(){return a},metadata:function(){return s},assets:function(){return l},toc:function(){return u},default:function(){return f}});var n=r(7462),o=r(3366),i=(r(7294),r(4137)),c=["components"],p={id:"project-types",title:"Supported Project Types",sidebar_label:"Supported Project Types",slug:"/get-started/project-types"},a=void 0,s={unversionedId:"get-started/project-types",id:"get-started/project-types",title:"Supported Project Types",description:"**Preview** - This document needs review and is subject to change",source:"@site/docs/get-started/project-types.md",sourceDirName:"get-started",slug:"/get-started/project-types",permalink:"/reasonml-idea-plugin/docs/get-started/project-types",editUrl:"https://github.com/giraud/reasonml-idea-plugin/edit/master/website/docs/get-started/project-types.md",tags:[],version:"current",frontMatter:{id:"project-types",title:"Supported Project Types",sidebar_label:"Supported Project Types",slug:"/get-started/project-types"},sidebar:"someSidebar",previous:{title:"Plugin Overview",permalink:"/reasonml-idea-plugin/docs/"},next:{title:"Live Templates",permalink:"/reasonml-idea-plugin/docs/get-started/live-templates"}},l={},u=[{value:"Dune Projects",id:"dune-projects",level:2},{value:"BuckleScript Projects",id:"bucklescript-projects",level:2},{value:"Esy Projects",id:"esy-projects",level:2}],d={toc:u};function f(e){var t=e.components,r=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},(0,i.kt)("strong",{parentName:"em"},"Preview")," - This document needs review and is subject to change")),(0,i.kt)("p",null,"Currently, three project types are supported:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Dune"),(0,i.kt)("li",{parentName:"ol"},"BuckleScript"),(0,i.kt)("li",{parentName:"ol"},"Esy (Beta)")),(0,i.kt)("p",null,"Project types are auto-detected, and a single IDEA project may contain multiple project types. An IDEA project can even contain multiple of the same type of project (mono-repo)."),(0,i.kt)("h1",{id:"project-detection"},"Project Detection"),(0,i.kt)("p",null,"Projects are auto-detected but may require additional setup. Detection is based on the presence of certain project configuration files. These are outlined below."),(0,i.kt)("h2",{id:"dune-projects"},"Dune Projects"),(0,i.kt)("p",null,"Dune projects currently require the most setup. If a ",(0,i.kt)("inlineCode",{parentName:"p"},"dune-project")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"dune")," file is present in your project then you should be prompted to create a Dune Facet. This Facet allows you to supply additional project information such as the OCaml SDK location on your system."),(0,i.kt)("h2",{id:"bucklescript-projects"},"BuckleScript Projects"),(0,i.kt)("p",null,"BuckleScript projects are detected based on the presence of a ",(0,i.kt)("inlineCode",{parentName:"p"},"bsconfig.json")," configuration file. If a BuckleScript configuration file is present, BuckleScript support will be enabled. This can be verified by the presence of a BuckleScript tool window icon in IDEA."),(0,i.kt)("h2",{id:"esy-projects"},"Esy Projects"),(0,i.kt)("p",null,"Esy projects are detected based on the presence of ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," file with an ",(0,i.kt)("inlineCode",{parentName:"p"},'"esy": {...}')," property. If an Esy configuration file is present, Esy support will be enabled. This can be verified by the presence of an Esy tool window icon in IDEA."))}f.isMDXComponent=!0}}]);