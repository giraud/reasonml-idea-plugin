"use strict";(self.webpackChunk_reasonml_idea_plugin_website=self.webpackChunk_reasonml_idea_plugin_website||[]).push([[842],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,p=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),c=u(n),d=o,m=c["".concat(p,".").concat(d)]||c[d]||g[d]||l;return n?r.createElement(m,i(i({ref:t},s),{},{components:n})):r.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,i=new Array(l);i[0]=d;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a[c]="string"==typeof e?e:o,i[1]=a;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6214:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>a,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const l={sidebar_position:3},i=void 0,a={unversionedId:"contributing/plugin-development",id:"contributing/plugin-development",title:"plugin-development",description:"Local Development",source:"@site/docs/contributing/plugin-development.md",sourceDirName:"contributing",slug:"/contributing/plugin-development",permalink:"/reasonml-idea-plugin/docs/contributing/plugin-development",draft:!1,editUrl:"https://github.com/giraud/reasonml-idea-plugin/edit/master/website/docs/contributing/plugin-development.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Design decisions",permalink:"/reasonml-idea-plugin/docs/contributing/plugin-architecture"},next:{title:"Resources",permalink:"/reasonml-idea-plugin/docs/contributing/resources"}},p={},u=[{value:"Local Development",id:"local-development",level:2},{value:"Prepare your Environment",id:"prepare-your-environment",level:3},{value:"Run the Plugin",id:"run-the-plugin",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Tools",id:"tools",level:2},{value:"Enable Debug Logs",id:"enable-debug-logs",level:2}],s={toc:u};function c(e){let{components:t,...l}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"local-development"},"Local Development"),(0,o.kt)("p",null,"Follow the steps below to get the plugin running locally for development."),(0,o.kt)("h3",{id:"prepare-your-environment"},"Prepare your Environment"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install the ",(0,o.kt)("a",{parentName:"li",href:"http://www.jetbrains.org/intellij/sdk/docs/tutorials/custom_language_support/prerequisites.html"},"plugin prerequisites"),", ensuring that the Plugin DevKit plugin is enabled and ",(0,o.kt)("a",{parentName:"li",href:"https://plugins.jetbrains.com/plugin/227-psiviewer"},"PsiViewer")," is installed and enabled.  "),(0,o.kt)("li",{parentName:"ol"},"Clone the project ",(0,o.kt)("inlineCode",{parentName:"li"},"git clone https://github.com/giraud/reasonml-idea-plugin.git")),(0,o.kt)("li",{parentName:"ol"},"Import the project into Intellij as a Gradle project. This should autoconfigure everything else needed to run the plugin."),(0,o.kt)("li",{parentName:"ol"},"If prompted, download the Intellij SDK source files. This is useful for debugging the Intellij platform code.")),(0,o.kt)("h3",{id:"run-the-plugin"},"Run the Plugin"),(0,o.kt)("p",null,"You can launch a new IDEA instance with your development version of the plugin installed with the ",(0,o.kt)("inlineCode",{parentName:"p"},"runIde")," gradle task."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(4241).Z,width:"270",height:"236"})),(0,o.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Verifying that your project is configured to use the ",(0,o.kt)("strong",{parentName:"li"},"gradle-wrapper.properties")," file under ",(0,o.kt)("strong",{parentName:"li"},"File > Settings > Gradle"),"."),(0,o.kt)("li",{parentName:"ul"},"Ensure that the ",(0,o.kt)("strong",{parentName:"li"},"Project SDK")," and ",(0,o.kt)("strong",{parentName:"li"},"Project Language Level")," are both set to ",(0,o.kt)("strong",{parentName:"li"},"Java 11 (Corretto - 11.0.9)")," via ",(0,o.kt)("strong",{parentName:"li"},"File > Project Structure > Project Settings > Project"),".")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"tools"},"Tools"),(0,o.kt)("p",null,"Two tools are very important for development: the PSIViewer and the Indices viewer."),(0,o.kt)("p",null,"When you start an IntelliJ instance with gradle for debugging,\nthey are automatically downloaded for you and immediately available."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"PSIViewer tool",src:n(8712).Z,width:"626",height:"256"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The PsiViewer tool to inspect PsiElements of the generated tree from parser")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"\xcendices viewer",src:n(3233).Z,width:"1092",height:"518"})),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The indices viewer tool let you verify the correctness of the indexing")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"enable-debug-logs"},"Enable Debug Logs"),(0,o.kt)("p",null,"Debug statements can be found throughout the plugin codebase."),(0,o.kt)("p",null,"Here's an example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'private final static Log LOG = Log.create("my-logging-category");\n\n...\n\nif (LOG.isDebugEnabled()) {\n  LOG.debug("Log some useful debug information here...");\n}\n')),(0,o.kt)("p",null,"These statements are disabled by default. To enable debug logs, do the following:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Launch an instance of IntelliJ + the plugin via the gradle task as described above.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the newly launched instance (not your development instance) click on ",(0,o.kt)("strong",{parentName:"p"},"Help > Diagnostic Tools > Debug Log Settings..."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Enter the following, replacing ",(0,o.kt)("inlineCode",{parentName:"p"},"my-logging-category")," with the value provided by the ",(0,o.kt)("inlineCode",{parentName:"p"},"Log.create(...)")," instantiator:"),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{alt:"Log Configuration",src:n(8313).Z,width:"427",height:"352"}))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Debug logs should now be enabled for that logging category. To view the logs, run ",(0,o.kt)("strong",{parentName:"p"},"Help > Show Log in Files")),(0,o.kt)("blockquote",{parentName:"li"},(0,o.kt)("p",{parentName:"blockquote"},"Note: you can run ",(0,o.kt)("inlineCode",{parentName:"p"},"tail -f idea.log")," from a terminal to follow along with the log output.")))))}c.isMDXComponent=!0},8313:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/enable-logging-178c1dfc6490befc765c8f7c56ff3c62.png"},3233:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/indicesviewer_01-9f220b589145e12ad963efbcdd6193e8.png"},8712:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/psiviewer_01-ce5dba988e0fc4e0f8bf2a768c766fd6.png"},4241:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/run_ide-16ae610e9fcaeec46e330232b03afed4.png"}}]);