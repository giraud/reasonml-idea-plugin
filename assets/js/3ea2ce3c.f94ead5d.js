"use strict";(self.webpackChunk_reasonml_idea_plugin_website=self.webpackChunk_reasonml_idea_plugin_website||[]).push([[842],{5369:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=i(5893),l=i(1151);const o={sidebar_position:3},s=void 0,r={id:"contributing/plugin-development",title:"plugin-development",description:"Local Development",source:"@site/docs/contributing/plugin-development.md",sourceDirName:"contributing",slug:"/contributing/plugin-development",permalink:"/reasonml-idea-plugin/docs/contributing/plugin-development",draft:!1,unlisted:!1,editUrl:"https://github.com/giraud/reasonml-idea-plugin/edit/master/website/docs/contributing/plugin-development.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Design decisions",permalink:"/reasonml-idea-plugin/docs/contributing/plugin-architecture"},next:{title:"Resources",permalink:"/reasonml-idea-plugin/docs/contributing/resources"}},d={},c=[{value:"Local Development",id:"local-development",level:2},{value:"Prepare your Environment",id:"prepare-your-environment",level:3},{value:"Run the Plugin",id:"run-the-plugin",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Tools",id:"tools",level:2},{value:"Enable Debug Logs",id:"enable-debug-logs",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"local-development",children:"Local Development"}),"\n",(0,t.jsx)(n.p,{children:"Follow the steps below to get the plugin running locally for development."}),"\n",(0,t.jsx)(n.h3,{id:"prepare-your-environment",children:"Prepare your Environment"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Install the ",(0,t.jsx)(n.a,{href:"http://www.jetbrains.org/intellij/sdk/docs/tutorials/custom_language_support/prerequisites.html",children:"plugin prerequisites"}),", ensuring that the Plugin DevKit plugin is enabled and ",(0,t.jsx)(n.a,{href:"https://plugins.jetbrains.com/plugin/227-psiviewer",children:"PsiViewer"})," is installed and enabled."]}),"\n",(0,t.jsxs)(n.li,{children:["Clone the project ",(0,t.jsx)(n.code,{children:"git clone https://github.com/giraud/reasonml-idea-plugin.git"})]}),"\n",(0,t.jsx)(n.li,{children:"Import the project into Intellij as a Gradle project. This should autoconfigure everything else needed to run the plugin."}),"\n",(0,t.jsx)(n.li,{children:"If prompted, download the Intellij SDK source files. This is useful for debugging the Intellij platform code."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"run-the-plugin",children:"Run the Plugin"}),"\n",(0,t.jsxs)(n.p,{children:["You can launch a new IDEA instance with your development version of the plugin installed with the ",(0,t.jsx)(n.code,{children:"runIde"})," gradle task."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:i(4241).Z+"",width:"270",height:"236"})}),"\n",(0,t.jsx)(n.h3,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Verifying that your project is configured to use the ",(0,t.jsx)(n.strong,{children:"gradle-wrapper.properties"})," file under ",(0,t.jsx)(n.strong,{children:"File > Settings > Gradle"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Ensure that the ",(0,t.jsx)(n.strong,{children:"Project SDK"})," and ",(0,t.jsx)(n.strong,{children:"Project Language Level"})," are both set to ",(0,t.jsx)(n.strong,{children:"Java 11 (Corretto - 11.0.9)"})," via ",(0,t.jsx)(n.strong,{children:"File > Project Structure > Project Settings > Project"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"tools",children:"Tools"}),"\n",(0,t.jsx)(n.p,{children:"Two tools are very important for development: the PSIViewer and the Indices viewer."}),"\n",(0,t.jsx)(n.p,{children:"When you start an IntelliJ instance with gradle for debugging,\nthey are automatically downloaded for you and immediately available."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"PSIViewer tool",src:i(8712).Z+"",width:"626",height:"256"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"The PsiViewer tool to inspect PsiElements of the generated tree from parser"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"\xcendices viewer",src:i(3233).Z+"",width:"1092",height:"518"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"The indices viewer tool let you verify the correctness of the indexing"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"enable-debug-logs",children:"Enable Debug Logs"}),"\n",(0,t.jsx)(n.p,{children:"Debug statements can be found throughout the plugin codebase."}),"\n",(0,t.jsx)(n.p,{children:"Here's an example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'private final static Log LOG = Log.create("my-logging-category");\n\n...\n\nif (LOG.isDebugEnabled()) {\n  LOG.debug("Log some useful debug information here...");\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"These statements are disabled by default. To enable debug logs, do the following:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Launch an instance of IntelliJ + the plugin via the gradle task as described above."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["In the newly launched instance (not your development instance) click on ",(0,t.jsx)(n.strong,{children:"Help > Diagnostic Tools > Debug Log Settings..."})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Enter the following, replacing ",(0,t.jsx)(n.code,{children:"my-logging-category"})," with the value provided by the ",(0,t.jsx)(n.code,{children:"Log.create(...)"})," instantiator:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Log Configuration",src:i(8313).Z+"",width:"427",height:"352"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Debug logs should now be enabled for that logging category. To view the logs, run ",(0,t.jsx)(n.strong,{children:"Help > Show Log in Files"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Note: you can run ",(0,t.jsx)(n.code,{children:"tail -f idea.log"})," from a terminal to follow along with the log output."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8313:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/images/enable-logging-178c1dfc6490befc765c8f7c56ff3c62.png"},3233:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/images/indicesviewer_01-9f220b589145e12ad963efbcdd6193e8.png"},8712:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/images/psiviewer_01-ce5dba988e0fc4e0f8bf2a768c766fd6.png"},4241:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/images/run_ide-16ae610e9fcaeec46e330232b03afed4.png"},1151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>s});var t=i(7294);const l={},o=t.createContext(l);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);