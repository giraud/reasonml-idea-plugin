<idea-plugin>
    <id>reasonml</id>
    <name>ReasonML</name>
    <vendor email="giraud.contact@yahoo.fr" url="https://github.com/giraud/reasonml-idea-plugin">H.Giraud</vendor>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="173"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends optional="true" config-file="java-deps.xml">com.intellij.modules.java</depends>

    <application-components>
        <component>
            <implementation-class>com.reason.build.CompilerManager</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>com.reason.ide.ORProjectTracker</implementation-class>
        </component>
    </project-components>

    <actions>
        <action id="reason.actions.make" class="com.reason.build.console.MakeAction" text="Bsb -make"/>
        <action id="reason.actions.makeWorld" class="com.reason.build.console.MakeWorldAction"
                text="bsb -clean-world -make-world"/>
        <action id="reason.actions.refmt" class="com.reason.ide.actions.ReformatAction" text="Reformat code (refmt)">
            <add-to-group group-id="CodeFormatGroup" anchor="after" relative-to-action="ReformatCode"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift R"/>
        </action>
        <action id="reason.actions.convert" class="com.reason.ide.actions.ConvertAction"
                text="Convert Reason-OCaml" description="Convert between Reason and OCaml code">
            <add-to-group group-id="EditMenu" anchor="last"/>
        </action>
        <action id="reason.actions.testData.Navigate" class="com.reason.ide.testAssistant.GotoTestDataAction"
                text="Navigate to testdata" use-shortcut-of="GotoTest">
        </action>
    </actions>

    <extensions defaultExtensionNs="com.intellij">
        <!--
         | File types
         -->

        <!-- Reason -->
        <fileTypeFactory implementation="com.reason.ide.files.RmlInterfaceFileTypeFactory"/>
        <fileTypeFactory implementation="com.reason.ide.files.RmlFileTypeFactory"/>
        <!-- OCaml -->
        <fileTypeFactory implementation="com.reason.ide.files.OclInterfaceFileTypeFactory"/>
        <fileTypeFactory implementation="com.reason.ide.files.OclFileTypeFactory"/>
        <!-- OCamlP4 -->
        <fileTypeFactory implementation="com.reason.ide.files.Ml4FileTypeFactory"/>
        <!-- OCamlMlg -->
        <fileTypeFactory implementation="com.reason.ide.files.MlgFileTypeFactory"/>
        <!-- OCaml - Lex -->
        <fileTypeFactory implementation="com.reason.ide.files.MllFileTypeFactory"/>
        <!-- OCaml - Yacc -->
        <fileTypeFactory implementation="com.reason.ide.files.MlyFileTypeFactory"/>
        <!-- Dune -->
        <fileTypeFactory implementation="com.reason.ide.files.DuneFileTypeFactory"/>
        <!-- Binary -->
        <fileTypeFactory implementation="com.reason.ide.files.CmiFileTypeFactory"/>
        <fileTypeFactory implementation="com.reason.ide.files.CmtFileTypeFactory"/>

        <!--
         | Parsers
         -->

        <!-- Reason -->
        <lang.parserDefinition language="Reason" implementationClass="com.reason.lang.reason.RmlParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Reason"
                                       implementationClass="com.reason.ide.highlight.RmlSyntaxHighlighterFactory"/>
        <!-- OCaml -->
        <lang.parserDefinition language="OCaml" implementationClass="com.reason.lang.ocaml.OclParserDefinition"/>
        <lang.syntaxHighlighterFactory language="OCaml"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCamlP4 -->
        <lang.parserDefinition language="OCamlP4" implementationClass="com.reason.lang.extra.OclP4ParserDefinition"/>
        <lang.syntaxHighlighterFactory language="OCamlP4"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCamlMlg -->
        <lang.parserDefinition language="Mlg" implementationClass="com.reason.lang.extra.OclMlgParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Mlg"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCaml - lex -->
        <lang.parserDefinition language="Mll" implementationClass="com.reason.lang.extra.OclMllParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Mll"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCaml - yacc -->
        <lang.parserDefinition language="Mly" implementationClass="com.reason.lang.ocamlyacc.OclYaccParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Mly"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- Dune -->
        <lang.parserDefinition language="Dune" implementationClass="com.reason.lang.dune.DuneParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Dune"
                                       implementationClass="com.reason.ide.highlight.DuneSyntaxHighlighterFactory"/>

        <!--
         | Structure / folding / comments
         -->

        <lang.psiStructureViewFactory language="Reason"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="OCaml"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="OCamlP4"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Mlg"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Mll"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Mly"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>

        <lang.foldingBuilder language="Reason" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="OCaml" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="OCamlP4" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="Mlg" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="Mll" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="Mly" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <!--<lang.foldingBuilder language="Dune" implementationClass="com.reason.ide.folding.DuneFoldingBuilder"/>-->

        <lang.commenter language="Reason" implementationClass="com.reason.ide.comment.RmlCommenter"/>
        <lang.commenter language="OCaml" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="OCamlP4" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="Mlg" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="Mll" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="Mly" implementationClass="com.reason.ide.comment.MlyCommenter"/>
        <lang.commenter language="Dune" implementationClass="com.reason.ide.comment.DuneCommenter"/>

        <lang.braceMatcher language="Reason" implementationClass="com.reason.ide.match.RmlPairedBraceMatcher"/>
        <lang.braceMatcher language="OCaml" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="OCamlP4" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Mlg" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Mll" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Mly" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Dune" implementationClass="com.reason.ide.match.DunePairedBraceMatcher"/>

        <!--
         | Doc
         -->

        <lang.documentationProvider language="Reason"
                                    implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="OCaml" implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="OCamlP4" implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="Mlg" implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="Mll" implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="Mly" implementationClass="com.reason.ide.docs.DocumentationProvider"/>

        <!--
         | Search / navigating
         -->

        <stubIndex implementation="com.reason.ide.search.index.ModuleIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleComponentIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.LetIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ValIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.TypeIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExternalIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.VariantIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.VariantFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExceptionIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExceptionFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.RecordFieldIndex"/>

        <fileBasedIndex implementation="com.reason.ide.search.index.FileModuleIndex"/>
        <fileBasedIndex implementation="com.reason.ide.search.index.NamespaceIndex"/>
        <applicationService serviceImplementation="com.reason.ide.search.FileModuleIndexService"/>

        <projectService serviceImplementation="com.reason.ide.search.PsiFinder"/>

        <lang.findUsagesProvider language="Reason" implementationClass="com.reason.ide.search.RmlFindUsagesProvider"/>
        <lang.findUsagesProvider language="OCaml" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="OCamlP4" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="Mlg" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="Mll" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="Mly" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>

        <gotoClassContributor implementation="com.reason.ide.go.ORModuleContributor"/>

        <!--
         | Settings
         -->

        <projectService serviceInterface="com.reason.ide.settings.ReasonSettings"
                        serviceImplementation="com.reason.ide.settings.ReasonSettings"/>
        <projectConfigurable id="settings.reason" groupId="language" displayName="Reason"
                             instance="com.reason.ide.settings.ReasonSettingsConfigurable"/>

        <!--
         | Compiler
         -->

        <projectService serviceImplementation="com.reason.build.bs.compiler.BsProcess"/>

        <projectService serviceInterface="com.reason.build.bs.Bucklescript"
                        serviceImplementation="com.reason.build.bs.BucklescriptImpl"/>

        <!--
         | Insight
         -->

        <projectService serviceInterface="com.reason.build.annotations.ErrorsManager"
                        serviceImplementation="com.reason.build.annotations.ErrorsManagerImpl"/>

        <!--<codeInsight.parameterNameHints language="Reason" implementationClass="SignatureProvider"/>-->
        <editor.linePainter implementation="com.reason.ide.hints.OREditorLinePainter"/>
        <projectService serviceImplementation="com.reason.ide.hints.CmtiFileListener"/>
        <projectService serviceImplementation="com.reason.hints.RincewindProcess"/>
        <projectService serviceInterface="com.reason.hints.InsightManager"
                        serviceImplementation="com.reason.hints.InsightManagerImpl"/>

        <!--
         | Others
         -->

        <projectService serviceImplementation="com.reason.build.bs.refmt.RefmtProcess"/>

        <internalFileTemplate name="Reason Module"/>
        <internalFileTemplate name="OCaml Module"/>

        <typedHandler implementation="com.reason.ide.ORTypedHandler" id="RmlTypedHandler"/>

        <lang.refactoringSupport language="OCaml"
                                 implementationClass="com.reason.ide.ORRefactoringSupportProvider"/>
        <lang.refactoringSupport language="Reason"
                                 implementationClass="com.reason.ide.ORRefactoringSupportProvider"/>

        <iconProvider implementation="com.reason.ide.IconProvider"/>

        <colorSettingsPage implementation="com.reason.ide.settings.ReasonColorSettingsPage"/>
        <colorSettingsPage implementation="com.reason.ide.settings.DuneColorSettingsPage"/>

        <annotator language="Reason" implementationClass="com.reason.ide.highlight.RmlSyntaxAnnotator"/>
        <annotator language="OCaml" implementationClass="com.reason.ide.highlight.OclSyntaxAnnotator"/>

        <externalAnnotator language="Reason" implementationClass="com.reason.build.annotations.ErrorAnnotator"/>
        <externalAnnotator language="OCaml" implementationClass="com.reason.build.annotations.ErrorAnnotator"/>
        <problemFileHighlightFilter implementation="com.reason.build.annotations.ErrorFileHighlighter"/>

        <completion.contributor language="Reason"
                                implementationClass="com.reason.ide.insight.RmlCompletionContributor"/>
        <completion.contributor language="Reason"
                                implementationClass="com.reason.ide.insight.RmlKeywordCompletionContributor"/>

        <completion.contributor language="OCaml" implementationClass="com.reason.ide.insight.OclCompletionContributor"/>
        <completion.contributor language="OCaml"
                                implementationClass="com.reason.ide.insight.OclKeywordCompletionContributor"/>
        <completion.contributor language="Mll"
                                implementationClass="com.reason.ide.insight.OclKeywordCompletionContributor"/>
        <completion.contributor language="Mly"
                                implementationClass="com.reason.ide.insight.OclKeywordCompletionContributor"/>

        <!-- Specifies semicolon-separated list of paths which should be added to the classpath of the compile server -->
        <compileServer.plugin classpath="jps-plugin.jar"/>

        <languageInjector implementation="com.reason.ide.JsInjector"/>

        <!--
         | Templates
         -->

        <defaultLiveTemplatesProvider implementation="com.reason.ide.template.RmlLiveTemplateProvider"/>
        <liveTemplateContext implementation="com.reason.ide.template.RmlContextType$Generic"/>

        <!--
         | Intentions
         -->

        <intentionAction>
            <className>com.reason.ide.intentions.FunctionBracesIntention</className>
            <category>Reason</category>
        </intentionAction>
        <intentionAction>
            <className>com.reason.ide.intentions.ExpandLocalOpenIntention</className>
            <category>Reason</category>
        </intentionAction>

        <!--
         | Debug
         -->

        <programRunner implementation="com.reason.ide.debug.OCamlDebugRunner"/>
        <xdebugger.breakpointType implementation="com.reason.ide.debug.ORLineBreakpointType"/>

        <!--
         | UI
         -->

        <toolWindow id="Bucklescript" anchor="bottom" icon="/icons/bucklescript.png"
                    factoryClass="com.reason.build.console.BsToolWindowFactory"/>

        <codeInsight.parameterInfo language="Reason"
                                   implementationClass="com.reason.ide.hints.ORParameterInfoHandlerWithTabActionSupport"/>
        <consoleFilterProvider implementation="com.reason.build.console.BsConsoleFilterProvider"/>
    </extensions>

</idea-plugin>
