<idea-plugin>
    <id>reasonml</id>
    <name>ReasonML</name>
    <vendor email="giraud.contact@yahoo.fr" url="https://github.com/giraud/reasonml-idea-plugin">H.Giraud</vendor>
    <description><![CDATA[Add support for ReasonML language. Also add support for OCaml, and Dune.]]></description>

    <!-- This tags is overwritten during build, see build.gradle -->
    <!-- We keep it in plugin.xml so that verifyPlugin task succeed -->
    <version>0.0</version>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="193" until-build="193.*"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends optional="true" config-file="java-deps.xml">com.intellij.modules.java</depends>

    <depends optional="true" config-file="js-deps.xml">JavaScript</depends>

    <actions>
        <!-- CONSOLE ACTIONS - BUCKLESCRIPT -->
        <!--suppress PluginXmlCapitalization -->
        <action id="bs.actions.make" class="com.reason.ide.console.BsMakeAction" text="Bsb -make"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="bs.actions.makeWorld" class="com.reason.ide.console.BsMakeWorldAction"
                text="bsb -clean-world -make-world"/>

        <!-- CONSOLE ACTIONS - DUNE -->
        <!--suppress PluginXmlCapitalization -->
        <action id="dune.actions.build" class="com.reason.ide.console.DuneBuildAction" text="Dune build"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="dune.actions.clean" class="com.reason.ide.console.DuneCleanAction" text="Dune clean"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="dune.actions.install" class="com.reason.ide.console.DuneInstallAction" text="Dune install"/>

        <!-- CONSOLE ACTIONS - ESY -->
        <!--suppress PluginXmlCapitalization -->
        <action id="esy.actions.build" class="com.reason.ide.console.EsyBuildAction" text="Esy build"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="esy.actions.install" class="com.reason.ide.console.EsyInstallAction" text="Esy install"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="esy.actions.shell" class="com.reason.ide.console.EsyShellAction" text="Esy shell"/>

        <!--suppress PluginXmlCapitalization -->
        <action id="reason.actions.refmt" class="com.reason.ide.actions.ReformatAction" text="Reformat code (refmt)">
            <add-to-group group-id="CodeFormatGroup" anchor="after" relative-to-action="ReformatCode"/>
            <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt r"/>
        </action>
        <action id="reason.actions.convert" class="com.reason.ide.actions.ConvertAction"
                text="Convert Reason-OCaml" description="Convert between Reason and OCaml code">
            <add-to-group group-id="EditMenu" anchor="last"/>
        </action>
        <action id="reason.actions.transform" class="com.reason.ide.actions.TransformAction"
                text="Convert Reason-OCaml (new file)" description="Convert between Reason and OCaml code in a new file">
            <add-to-group group-id="EditMenu" anchor="last"/>
        </action>
        <action id="reason.actions.testData.Navigate" class="com.reason.ide.testAssistant.GotoTestDataAction"
                text="Navigate to Testdata" use-shortcut-of="GotoTest">
        </action>
    </actions>

    <!--
    lang:     https://upsource.jetbrains.com/idea-ce/file/idea-ce-37502bec42258b27d4547dbe8593ba3427bfcc49/platform/platform-resources/src/META-INF/LangExtensionPoints.xml
    platform: https://upsource.jetbrains.com/idea-ce/file/idea-ce-e9f8dd0cfdfe1a70011a5694d7da93dee387ca7b/platform/platform-resources/src/META-INF/PlatformExtensionPoints.xml
    vcs:      https://upsource.jetbrains.com/idea-ce/file/idea-ce-37502bec42258b27d4547dbe8593ba3427bfcc49/platform/platform-resources/src/META-INF/VcsExtensionPoints.xml
    -->
    <extensions defaultExtensionNs="com.intellij">

        <postStartupActivity implementation="com.reason.ide.ORPostStartupActivity"/>

        <!--
         | Listeners
         -->

        <projectService serviceImplementation="com.reason.ide.ORProjectRootListener"/>
        <projectService serviceImplementation="com.reason.ide.ORFileDocumentListener"/>
        <editorFactoryListener implementation="com.reason.ide.OREditorTracker$AppLevelEditorFactoryListener"/>
        <vfs.asyncListener implementation="com.reason.ide.ORVirtualFileListener"/>

        <!--
         | File types
         -->

        <!-- Reason -->
        <fileType extensions="rei" name="Reason interface file" fieldName="INSTANCE" language="Reason"
                  implementationClass="com.reason.ide.files.RmlInterfaceFileType"/>
        <fileType extensions="re" name="Reason file" fieldName="INSTANCE" language="Reason"
                  implementationClass="com.reason.ide.files.RmlFileType"/>
        <!-- OCaml -->
        <fileType extensions="mli" name="OCaml interface file" fieldName="INSTANCE" language="OCaml"
                  implementationClass="com.reason.ide.files.OclInterfaceFileType"/>
        <fileType extensions="ml" name="OCaml file" fieldName="INSTANCE" language="OCaml"
                  implementationClass="com.reason.ide.files.OclFileType"/>
        <!-- OCamlP4 -->
        <fileType extensions="ml4" name="OCamlP4 file" fieldName="INSTANCE" language="OCamlP4"
                  implementationClass="com.reason.ide.files.Ml4FileType"/>
        <!-- OCamlMlg -->
        <fileType extensions="mlg" name="MLG" fieldName="INSTANCE" language="Mlg"
                  implementationClass="com.reason.ide.files.MlgFileType"/>
        <!-- OCaml - Lex -->
        <fileType extensions="mll" name="MLL" fieldName="INSTANCE" language="Mll"
                  implementationClass="com.reason.ide.files.MllFileType"/>
        <!-- OCaml - Yacc -->
        <fileType extensions="mly" name="Mly file" fieldName="INSTANCE" language="Mly"
                  implementationClass="com.reason.ide.files.MlyFileType"/>
        <!-- BuckleScript Configuration (bsconfig.json) -->
        <fileType name="BuckleScript Configuration" fieldName="INSTANCE" language="JSON"
                  fileNames="bsconfig.json"
                  implementationClass="com.reason.ide.files.BsConfigJsonFileType"/>
        <!-- Dune -->
        <fileType name="Dune Configuration" fieldName="INSTANCE" language="Dune"
                  fileNames="dune;dune-project;jbuild"
                  implementationClass="com.reason.ide.files.DuneFileType"/>
        <!-- Binary -->
        <fileType extensions="cmt" name="CMT" fieldName="INSTANCE"
                  implementationClass="com.reason.ide.files.CmtFileType"/>

        <!--
         | File related
         -->

        <fileEditorProvider implementation="com.reason.ide.editors.CmtFileEditorProvider"/>

        <internalFileTemplate name="OCaml Interface"/>
        <internalFileTemplate name="OCaml Module"/>
        <internalFileTemplate name="Reason Interface"/>
        <internalFileTemplate name="Reason Module"/>

        <!--
         | Parsers
         -->

        <!-- Reason -->
        <lang.parserDefinition language="Reason" implementationClass="com.reason.lang.reason.RmlParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Reason"
                                       implementationClass="com.reason.ide.highlight.RmlSyntaxHighlighterFactory"/>
        <!-- OCaml -->
        <lang.parserDefinition language="OCaml" implementationClass="com.reason.lang.ocaml.OclParserDefinition"/>
        <lang.syntaxHighlighterFactory language="OCaml"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCamlP4 -->
        <lang.parserDefinition language="OCamlP4" implementationClass="com.reason.lang.extra.OclP4ParserDefinition"/>
        <lang.syntaxHighlighterFactory language="OCamlP4"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCamlMlg -->
        <lang.parserDefinition language="Mlg" implementationClass="com.reason.lang.extra.OclMlgParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Mlg"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCaml - lex -->
        <lang.parserDefinition language="Mll" implementationClass="com.reason.lang.extra.OclMllParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Mll"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCaml - yacc -->
        <lang.parserDefinition language="Mly" implementationClass="com.reason.lang.ocamlyacc.OclYaccParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Mly"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- Dune -->
        <lang.parserDefinition language="Dune" implementationClass="com.reason.lang.dune.DuneParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Dune"
                                       implementationClass="com.reason.ide.highlight.DuneSyntaxHighlighterFactory"/>

        <!--
         | Structure / folding / comments
         -->

        <lang.psiStructureViewFactory language="Reason"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="OCaml"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="OCamlP4"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Mlg"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Mll"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Mly"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Dune"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>

        <lang.foldingBuilder language="Reason" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="OCaml" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="OCamlP4" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="Mlg" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="Mll" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="Mly" implementationClass="com.reason.ide.folding.FoldingBuilder"/>
        <lang.foldingBuilder language="Dune" implementationClass="com.reason.ide.folding.DuneFoldingBuilder"/>

        <lang.commenter language="Reason" implementationClass="com.reason.ide.comment.RmlCommenter"/>
        <lang.commenter language="OCaml" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="OCamlP4" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="Mlg" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="Mll" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="Mly" implementationClass="com.reason.ide.comment.MlyCommenter"/>
        <lang.commenter language="Dune" implementationClass="com.reason.ide.comment.DuneCommenter"/>

        <lang.braceMatcher language="Reason" implementationClass="com.reason.ide.match.RmlPairedBraceMatcher"/>
        <lang.braceMatcher language="OCaml" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="OCamlP4" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Mlg" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Mll" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Mly" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Dune" implementationClass="com.reason.ide.match.DunePairedBraceMatcher"/>

        <!--
         | Doc
         -->

        <lang.documentationProvider language="Reason"
                                    implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="OCaml" implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="OCamlP4" implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="Mlg" implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="Mll" implementationClass="com.reason.ide.docs.DocumentationProvider"/>
        <lang.documentationProvider language="Mly" implementationClass="com.reason.ide.docs.DocumentationProvider"/>

        <!--
         | Search / navigating
         -->

        <stubIndex implementation="com.reason.ide.search.index.ModuleIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleComponentIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.LetIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.LetFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ValIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ValFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.TypeIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExternalIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.VariantIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.VariantFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExceptionIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExceptionFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.RecordFieldIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ParameterIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ParameterFqnIndex"/>

        <fileBasedIndex implementation="com.reason.ide.search.index.FileModuleIndex"/>
        <fileBasedIndex implementation="com.reason.ide.search.index.NamespaceIndex"/>
        <applicationService serviceImplementation="com.reason.ide.search.FileModuleIndexService"/>

        <projectService serviceImplementation="com.reason.ide.search.PsiFinder"/>

        <lang.findUsagesProvider language="Reason" implementationClass="com.reason.ide.search.RmlFindUsagesProvider"/>
        <lang.findUsagesProvider language="OCaml" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="OCamlP4" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="Mlg" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="Mll" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="Mly" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>

        <gotoClassContributor implementation="com.reason.ide.go.ORModuleContributor"/>

        <!--
         | Settings
         -->

        <projectService serviceImplementation="com.reason.ide.settings.ReasonSettings"/>
        <projectConfigurable id="settings.reason" groupId="language" displayName="Reason"
                             instance="com.reason.ide.settings.ReasonSettingsConfigurable"/>

        <!--
         | Compiler
         -->

        <applicationService serviceImplementation="com.reason.ide.ORCompilerManager"/>
        <projectService serviceImplementation="com.reason.bs.BsProcess"/>
        <projectService serviceInterface="com.reason.bs.Bucklescript"
                        serviceImplementation="com.reason.bs.BucklescriptImpl"/>

        <!--
         | Insight
         -->

        <projectService serviceInterface="com.reason.ide.annotations.ErrorsManager"
                        serviceImplementation="com.reason.ide.annotations.ErrorsManagerImpl"/>

        <!--<codeInsight.parameterNameHints language="Reason" implementationClass="SignatureProvider"/>-->
        <editor.linePainter implementation="com.reason.ide.hints.OREditorLinePainter"/>
        <projectService serviceImplementation="com.reason.hints.RincewindProcess"/>
        <projectService serviceInterface="com.reason.hints.InsightManager"
                        serviceImplementation="com.reason.hints.InsightManagerImpl"/>

        <!--
         | Others
         -->

        <projectService serviceImplementation="com.reason.bs.RefmtProcess"/>

        <typedHandler implementation="com.reason.ide.ORTypedHandler" id="RmlTypedHandler"/>

        <lang.refactoringSupport language="OCaml"
                                 implementationClass="com.reason.ide.ORRefactoringSupportProvider"/>
        <lang.refactoringSupport language="Reason"
                                 implementationClass="com.reason.ide.ORRefactoringSupportProvider"/>

        <iconProvider implementation="com.reason.ide.IconProvider"/>

        <colorSettingsPage implementation="com.reason.ide.settings.ReasonColorSettingsPage"/>
        <colorSettingsPage implementation="com.reason.ide.settings.DuneColorSettingsPage"/>

        <annotator language="" implementationClass="com.reason.ide.highlight.DuneSyntaxAnnotator"/>
        <annotator language="Reason" implementationClass="com.reason.ide.highlight.RmlSyntaxAnnotator"/>
        <annotator language="OCaml" implementationClass="com.reason.ide.highlight.OclSyntaxAnnotator"/>

        <externalAnnotator language="Reason" implementationClass="com.reason.ide.annotations.ErrorAnnotator"/>
        <externalAnnotator language="OCaml" implementationClass="com.reason.ide.annotations.ErrorAnnotator"/>
        <problemFileHighlightFilter implementation="com.reason.ide.annotations.ErrorFileHighlighter"/>

        <completion.contributor language="Reason"
                                implementationClass="com.reason.ide.insight.RmlCompletionContributor"/>
        <completion.contributor language="Reason"
                                implementationClass="com.reason.ide.insight.RmlKeywordCompletionContributor"/>

        <completion.contributor language="OCaml" implementationClass="com.reason.ide.insight.OclCompletionContributor"/>
        <completion.contributor language="OCaml"
                                implementationClass="com.reason.ide.insight.OclKeywordCompletionContributor"/>
        <completion.contributor language="Mll"
                                implementationClass="com.reason.ide.insight.OclKeywordCompletionContributor"/>
        <completion.contributor language="Mly"
                                implementationClass="com.reason.ide.insight.OclKeywordCompletionContributor"/>

        <!-- Specifies semicolon-separated list of paths which should be added to the classpath of the compiler server -->
        <compileServer.plugin classpath="jps-plugin.jar"/>

        <languageInjector implementation="com.reason.ide.JsInjector"/>

        <!--
         | Templates
         -->

        <defaultLiveTemplatesProvider implementation="com.reason.ide.template.RmlLiveTemplateProvider"/>
        <liveTemplateContext implementation="com.reason.ide.template.RmlContextType$Generic"/>

        <!--
         | Intentions
         -->

        <intentionAction>
            <className>com.reason.ide.intentions.FunctionBracesIntention</className>
            <category>Reason</category>
        </intentionAction>
        <intentionAction>
            <className>com.reason.ide.intentions.ExpandLocalOpenIntention</className>
            <category>Reason</category>
        </intentionAction>

        <!--
         | Debug
         -->

        <programRunner implementation="com.reason.ide.debug.OCamlDebugRunner"/>
        <xdebugger.breakpointType implementation="com.reason.ide.debug.ORLineBreakpointType"/>

        <!--
         | UI
         -->

        <toolWindow id="BuckleScript:" anchor="bottom" icon="ORIcons.bucklescriptTool" factoryClass="com.reason.ide.console.BsToolWindowFactory"/>
        <toolWindow id="Dune:" anchor="bottom" icon="ORIcons.duneTool" factoryClass="com.reason.ide.console.DuneToolWindowFactory"/>
        <toolWindow id="Esy:" anchor="bottom" icon="ORIcons.esyTool" factoryClass="com.reason.ide.console.EsyToolWindowFactory"/>

        <codeInsight.parameterInfo language="Reason"
                                   implementationClass="com.reason.ide.hints.ORParameterInfoHandlerWithTabActionSupport"/>
        <consoleFilterProvider implementation="com.reason.ide.console.BsConsoleFilterProvider"/>
    </extensions>

</idea-plugin>
