<idea-plugin>
    <id>reasonml</id>
    <name>ReasonML</name>
    <vendor email="giraud.contact@yahoo.fr" url="https://github.com/giraud/reasonml-idea-plugin">H.Giraud</vendor>
    <description><![CDATA[Add support for Rescript, ReasonML and OCaml (including Dune).]]></description>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="java-deps.xml">com.intellij.modules.java</depends>
    <depends optional="true" config-file="js-deps.xml">JavaScript</depends>

    <actions>
        <!-- CONSOLE ACTIONS - BUCKLESCRIPT -->
        <!--suppress PluginXmlCapitalization -->
        <action id="bs.actions.make" class="com.reason.ide.console.bs.BsMakeAction" text="Bsb -make"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="bs.actions.makeWorld" class="com.reason.ide.console.bs.BsMakeWorldAction"
                text="Bsb -clean-world -make-world"/>

        <!-- CONSOLE ACTIONS - DUNE -->
        <!--suppress PluginXmlCapitalization -->
        <action id="dune.actions.build" class="com.reason.ide.console.dune.DuneBuildAction" text="Dune build"/>
        <!--suppress PluginXmlCapitalization -->
        <action id="dune.actions.clean" class="com.reason.ide.console.dune.DuneCleanAction" text="Dune clean"/>

        <!-- CONSOLE ACTIONS - ESY -->
        <!--suppress PluginXmlCapitalization -->
        <action id="esy.actions.build" class="com.reason.ide.console.esy.EsyBuildAction" text="Esy build"/>

        <!--suppress PluginXmlCapitalization -->
        <action id="reason.actions.convert" class="com.reason.ide.actions.ConvertAction"
                text="Convert Reason-OCaml" description="Convert between Reason and OCaml code">
            <add-to-group group-id="EditMenu" anchor="last"/>
        </action>
        <!--suppress PluginXmlCapitalization -->
        <action id="reason.actions.transform" class="com.reason.ide.actions.TransformAction"
                text="Convert Reason-OCaml (new file)"
                description="Convert between Reason and OCaml code in a new file">
            <add-to-group group-id="EditMenu" anchor="last"/>
        </action>
        <action id="reason.actions.testData.Navigate" class="com.reason.ide.testAssistant.GotoTestDataAction"
                text="Navigate to Testdata" use-shortcut-of="GotoTest">
        </action>
    </actions>

    <!--
    lang:     https://upsource.jetbrains.com/idea-ce/file/idea-ce-37502bec42258b27d4547dbe8593ba3427bfcc49/platform/platform-resources/src/META-INF/LangExtensionPoints.xml
    platform: https://upsource.jetbrains.com/idea-ce/file/idea-ce-e9f8dd0cfdfe1a70011a5694d7da93dee387ca7b/platform/platform-resources/src/META-INF/PlatformExtensionPoints.xml
    vcs:      https://upsource.jetbrains.com/idea-ce/file/idea-ce-37502bec42258b27d4547dbe8593ba3427bfcc49/platform/platform-resources/src/META-INF/VcsExtensionPoints.xml
    -->
    <extensions defaultExtensionNs="com.intellij">

        <backgroundPostStartupActivity implementation="com.reason.ide.ORPostStartupActivity"/>

        <!--
         | Listeners
         -->

        <vfs.asyncListener implementation="com.reason.ide.ORVirtualFileListener"/>

        <!--
         | File types
         -->

        <!-- Reason -->
        <fileType extensions="rei" name="REASON_INTF" fieldName="INSTANCE" language="Reason"
                  implementationClass="com.reason.ide.files.RmlInterfaceFileType"/>
        <fileType extensions="re" name="REASON" fieldName="INSTANCE" language="Reason"
                  implementationClass="com.reason.ide.files.RmlFileType"/>
        <!-- Rescript -->
        <fileType extensions="resi" name="RESCRIPT_INTF" fieldName="INSTANCE" language="Rescript"
                  implementationClass="com.reason.ide.files.ResInterfaceFileType"/>
        <!-- Can't use extension, use isMyFileType function instead -->
        <fileType name="RESCRIPT" fieldName="INSTANCE" language="Rescript"
                  implementationClass="com.reason.ide.files.ResFileType"/>
        <!-- OCaml -->
        <fileType extensions="mli" name="OCAML_INTF" fieldName="INSTANCE" language="OCaml"
                  implementationClass="com.reason.ide.files.OclInterfaceFileType"/>
        <fileType extensions="ml" name="OCAML" fieldName="INSTANCE" language="OCaml"
                  implementationClass="com.reason.ide.files.OclFileType"/>
        <!-- OCamlP4 -->
        <fileType extensions="ml4" name="OCamlP4 file" fieldName="INSTANCE" language="OCamlP4"
                  implementationClass="com.reason.ide.files.Ml4FileType"/>
        <!-- OCamlMlg -->
        <fileType extensions="mlg" name="MLG" fieldName="INSTANCE" language="Mlg"
                  implementationClass="com.reason.ide.files.MlgFileType"/>
        <!-- OCaml - Lex -->
        <fileType extensions="mll" name="MLL" fieldName="INSTANCE" language="Mll"
                  implementationClass="com.reason.ide.files.MllFileType"/>
        <!-- OCaml - Yacc -->
        <fileType extensions="mly" name="MlY" fieldName="INSTANCE" language="Mly"
                  implementationClass="com.reason.ide.files.MlyFileType"/>
        <!-- Configuration files -->
        <fileType name="Compiler configuration" fieldName="INSTANCE" language="JSON"
                  fileNames="bsconfig.json;rescript.json"
                  implementationClass="com.reason.ide.files.ORConfigJsonFileType"/>
        <!-- Dune -->
        <fileType name="DUNE" fieldName="INSTANCE" language="Dune"
                  fileNames="dune;dune-project;jbuild"
                  implementationClass="com.reason.ide.files.DuneFileType"/>
        <!-- Binary -->
        <fileType extensions="cmt" name="CMT" fieldName="INSTANCE"
                  implementationClass="com.reason.ide.files.CmtFileType"/>

        <!--
         | File related
         -->

        <fileEditorProvider implementation="com.reason.ide.editors.CmtFileEditorProvider"/>
        <internalFileTemplate name="Rescript Module"/>
        <!-- https://github.com/giraud/reasonml-idea-plugin/issues/247 -->
        <!-- internalFileTemplate name="OCaml Interface" -->
        <!-- internalFileTemplate name="OCaml Module" -->
        <!-- internalFileTemplate name="Reason Interface" -->
        <!-- internalFileTemplate name="Reason Module" -->

        <!--
         | Parsers
         -->

        <!-- Reason -->
        <stubElementTypeHolder externalIdPrefix="Reason." class="com.reason.lang.core.stub.RmlStubBasedElementTypes"/>
        <lang.ast.factory language="Reason" implementationClass="com.reason.lang.reason.RmlASTFactory"/>
        <lang.parserDefinition language="Reason" implementationClass="com.reason.lang.reason.RmlSafeParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Reason"
                                       implementationClass="com.reason.ide.highlight.RmlSyntaxHighlighterFactory"/>
        <!-- Rescript -->
        <stubElementTypeHolder externalIdPrefix="Rescript."
                               class="com.reason.lang.core.stub.ResStubBasedElementTypes"/>
        <lang.ast.factory language="Rescript" implementationClass="com.reason.lang.rescript.ResASTFactory"/>
        <lang.parserDefinition language="Rescript"
                               implementationClass="com.reason.lang.rescript.ResSafeParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Rescript"
                                       implementationClass="com.reason.ide.highlight.ResSyntaxHighlighterFactory"/>
        <!-- OCaml -->
        <stubElementTypeHolder externalIdPrefix="OCaml." class="com.reason.lang.core.stub.OclStubBasedElementTypes"/>
        <lang.ast.factory language="OCaml" implementationClass="com.reason.lang.ocaml.OclASTFactory"/>
        <lang.parserDefinition language="OCaml" implementationClass="com.reason.lang.ocaml.OclSafeParserDefinition"/>
        <lang.syntaxHighlighterFactory language="OCaml"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCamlP4 -->
        <lang.parserDefinition language="OCamlP4" implementationClass="com.reason.lang.extra.OclP4ParserDefinition"/>
        <lang.syntaxHighlighterFactory language="OCamlP4"
                                       implementationClass="com.reason.ide.highlight.OclSyntaxHighlighterFactory"/>
        <!-- OCamlMlg -->
        <lang.parserDefinition language="Mlg"
                               implementationClass="com.reason.lang.ocamlgrammar.OclGrammarParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Mlg"
                                       implementationClass="com.reason.ide.highlight.OclGrammarSyntaxHighlighterFactory"/>
        <lang.fileViewProviderFactory language="Mlg"
                                      implementationClass="com.reason.ide.files.MlgFileViewProviderFactory"/>
        <!-- OCaml - lex -->
        <lang.parserDefinition language="Mll" implementationClass="com.reason.lang.ocamllex.OclLexParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Mll"
                                       implementationClass="com.reason.ide.highlight.OclLexSyntaxHighlighterFactory"/>
        <lang.fileViewProviderFactory language="Mll"
                                      implementationClass="com.reason.ide.files.MllFileViewProviderFactory"/>
        <!-- OCaml - yacc -->
        <lang.parserDefinition language="Mly" implementationClass="com.reason.lang.ocamlyacc.OclYaccParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Mly"
                                       implementationClass="com.reason.ide.highlight.OclYaccSyntaxHighlighterFactory"/>
        <lang.fileViewProviderFactory language="Mly"
                                      implementationClass="com.reason.ide.files.MlyFileViewProviderFactory"/>
        <!-- Dune -->
        <lang.ast.factory language="Dune" implementationClass="com.reason.lang.dune.DuneASTFactory"/>
        <lang.parserDefinition language="Dune" implementationClass="com.reason.lang.dune.DuneParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Dune"
                                       implementationClass="com.reason.ide.highlight.DuneSyntaxHighlighterFactory"/>

        <!--
         | Structure / folding / comments
         -->

        <lang.psiStructureViewFactory language="Reason"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Rescript"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="OCaml"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="OCamlP4"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Mlg"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Mll"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Mly"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>
        <lang.psiStructureViewFactory language="Dune"
                                      implementationClass="com.reason.ide.structure.StructureViewFactory"/>

        <lang.foldingBuilder language="Reason" implementationClass="com.reason.ide.folding.ORFoldingBuilder"/>
        <lang.foldingBuilder language="Rescript" implementationClass="com.reason.ide.folding.ORFoldingBuilder"/>
        <lang.foldingBuilder language="OCaml" implementationClass="com.reason.ide.folding.ORFoldingBuilder"/>
        <lang.foldingBuilder language="OCamlP4" implementationClass="com.reason.ide.folding.ORFoldingBuilder"/>
        <lang.foldingBuilder language="Mlg" implementationClass="com.reason.ide.folding.ORFoldingBuilder"/>
        <lang.foldingBuilder language="Mll" implementationClass="com.reason.ide.folding.ORFoldingBuilder"/>
        <lang.foldingBuilder language="Mly" implementationClass="com.reason.ide.folding.ORFoldingBuilder"/>
        <lang.foldingBuilder language="Dune" implementationClass="com.reason.ide.folding.DuneFoldingBuilder"/>

        <lang.commenter language="Reason" implementationClass="com.reason.ide.comment.RmlCommenter"/>
        <lang.commenter language="Rescript" implementationClass="com.reason.ide.comment.RmlCommenter"/>
        <lang.commenter language="OCaml" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="OCamlP4" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="Mlg" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="Mll" implementationClass="com.reason.ide.comment.OclCommenter"/>
        <lang.commenter language="Mly" implementationClass="com.reason.ide.comment.MlyCommenter"/>
        <lang.commenter language="Dune" implementationClass="com.reason.ide.comment.DuneCommenter"/>

        <lang.braceMatcher language="Reason" implementationClass="com.reason.ide.match.RmlPairedBraceMatcher"/>
        <lang.braceMatcher language="Rescript" implementationClass="com.reason.ide.match.ResPairedBraceMatcher"/>
        <lang.braceMatcher language="OCaml" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="OCamlP4" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Mlg" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Mll" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Mly" implementationClass="com.reason.ide.match.OclPairedBraceMatcher"/>
        <lang.braceMatcher language="Dune" implementationClass="com.reason.ide.match.DunePairedBraceMatcher"/>

        <!--
         | Doc
         -->

        <lang.documentationProvider language="Reason"
                                    implementationClass="com.reason.ide.docs.ORDocumentationProvider"/>
        <lang.documentationProvider language="Rescript"
                                    implementationClass="com.reason.ide.docs.ORDocumentationProvider"/>
        <lang.documentationProvider language="OCaml" implementationClass="com.reason.ide.docs.ORDocumentationProvider"/>
        <lang.documentationProvider language="OCamlP4"
                                    implementationClass="com.reason.ide.docs.ORDocumentationProvider"/>
        <lang.documentationProvider language="Mlg" implementationClass="com.reason.ide.docs.ORDocumentationProvider"/>
        <lang.documentationProvider language="Mll" implementationClass="com.reason.ide.docs.ORDocumentationProvider"/>
        <lang.documentationProvider language="Mly" implementationClass="com.reason.ide.docs.ORDocumentationProvider"/>

        <!--
         | Search / navigating
         -->

        <stubIndex implementation="com.reason.ide.search.index.ModuleFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ModuleSignatureIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ClassFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ClassMethodFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.LetFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.LetComponentFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ValFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.TypeIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.TypeFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExternalIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExternalFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.VariantFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExceptionIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ExceptionFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.RecordFieldIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ObjectFieldIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ParameterIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.ParameterFqnIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.IncludeIndex"/>
        <stubIndex implementation="com.reason.ide.search.index.OpenIndex"/>

        <fileBasedIndex implementation="com.reason.ide.search.index.FileModuleIndex"/>

        <lang.findUsagesProvider language="Reason" implementationClass="com.reason.ide.search.RmlFindUsagesProvider"/>
        <lang.findUsagesProvider language="Rescript"
                                 implementationClass="com.reason.ide.search.ResFindUsagesProvider"/>
        <lang.findUsagesProvider language="OCaml" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="OCamlP4" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="Mlg" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="Mll" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>
        <lang.findUsagesProvider language="Mly" implementationClass="com.reason.ide.search.OclFindUsagesProvider"/>

        <gotoClassContributor implementation="com.reason.ide.go.ORModuleContributor"/>

        <!-- for ctrl + alt + click navigation -->
        <definitionsScopedSearch implementation="com.reason.ide.search.ORImplementationSearch"/>

        <targetElementEvaluator language="OCaml" implementationClass="com.reason.ide.files.ORTargetElementEvaluator"/>
        <!-- Navigate to make function if top level module is a component -->
        <targetElementEvaluator language="Reason"
                                implementationClass="com.reason.ide.files.ORTargetElementEvaluator"/>
        <targetElementEvaluator language="Rescript"
                                implementationClass="com.reason.ide.files.ORTargetElementEvaluator"/>

        <!--
         | SDK / Libs / Settings
         -->

        <orderRootType implementation="jpsplugin.com.reason.OclSourcesOrderRootType" id="OCAML_SOURCES" order="FIRST"/>
        <OrderRootTypeUI key="OCAML_SOURCES"
                         implementationClass="jpsplugin.com.reason.OClSourcesOrderRootTypeUIFactory"/>

        <library.type implementation="com.reason.ide.library.OclLibraryType"/>
        <additionalLibraryRootsProvider implementation="com.reason.ide.library.OclLibraryRootProvider"/>

        <projectService serviceImplementation="com.reason.ide.settings.ORSettings"/>
        <projectConfigurable id="settings.reason" groupId="language" displayName="OCaml(Reason) / Rescript"
                             instance="com.reason.ide.settings.ORSettingsConfigurable"/>

        <projectSdkSetupValidator implementation="com.reason.ide.library.OclSdkSetupValidator"/>

        <!--
         | Insight
         -->

        <!--<codeInsight.parameterNameHints language="Reason" implementationClass="SignatureProvider"/>-->
        <editor.linePainter implementation="com.reason.ide.hints.OREditorLinePainter"/>

        <!--
         | Others
         -->

        <postFormatProcessor implementation="com.reason.ide.format.ORPostFormatProcessor"/>

        <typedHandler implementation="com.reason.ide.handlers.ORTypedHandler" id="RmlTypedHandler"/>
        <quoteHandler fileType="RESCRIPT" className="com.reason.ide.handlers.ResQuoteHandler"/>
        <quoteHandler fileType="RESCRIPT_INTF" className="com.reason.ide.handlers.ResQuoteHandler"/>
        <quoteHandler fileType="REASON" className="com.reason.ide.handlers.RmlQuoteHandler"/>
        <quoteHandler fileType="REASON_INTF" className="com.reason.ide.handlers.RmlQuoteHandler"/>
        <quoteHandler fileType="OCAML" className="com.reason.ide.handlers.OclQuoteHandler"/>
        <quoteHandler fileType="OCAML_INTF" className="com.reason.ide.handlers.OclQuoteHandler"/>

        <lang.refactoringSupport language="OCaml"
                                 implementationClass="com.reason.ide.refactor.ORRefactoringSupportProvider"/>
        <lang.refactoringSupport language="Reason"
                                 implementationClass="com.reason.ide.refactor.ORRefactoringSupportProvider"/>
        <lang.refactoringSupport language="Rescript"
                                 implementationClass="com.reason.ide.refactor.ORRefactoringSupportProvider"/>

        <iconProvider implementation="com.reason.ide.IconProvider"/>

        <colorSettingsPage implementation="com.reason.ide.settings.ORColorSettingsPage"/>

        <annotator language="Reason" implementationClass="com.reason.ide.highlight.RmlSyntaxAnnotator"/>
        <annotator language="Rescript" implementationClass="com.reason.ide.highlight.ResSyntaxAnnotator"/>
        <annotator language="OCaml" implementationClass="com.reason.ide.highlight.OclSyntaxAnnotator"/>
        <annotator language="Dune" implementationClass="com.reason.ide.highlight.DuneSyntaxAnnotator"/>

        <externalAnnotator language="Reason" implementationClass="com.reason.ide.annotations.ORErrorAnnotator"/>
        <externalAnnotator language="Rescript" implementationClass="com.reason.ide.annotations.ORErrorAnnotator"/>
        <externalAnnotator language="OCaml" implementationClass="com.reason.ide.annotations.ORErrorAnnotator"/>
        <problemFileHighlightFilter implementation="com.reason.ide.annotations.ErrorFileHighlighter"/>

        <completion.contributor language="Reason"
                                implementationClass="com.reason.ide.insight.RmlCompletionContributor"/>
        <completion.contributor language="Reason"
                                implementationClass="com.reason.ide.insight.RmlKeywordCompletionContributor"/>
        <completion.contributor language="Rescript"
                                implementationClass="com.reason.ide.insight.ResCompletionContributor"/>
        <completion.contributor language="Rescript"
                                implementationClass="com.reason.ide.insight.ResKeywordCompletionContributor"/>
        <completion.contributor language="OCaml"
                                implementationClass="com.reason.ide.insight.OclCompletionContributor"/>
        <completion.contributor language="OCaml"
                                implementationClass="com.reason.ide.insight.OclKeywordCompletionContributor"/>
        <completion.contributor language="Mll"
                                implementationClass="com.reason.ide.insight.OclKeywordCompletionContributor"/>
        <completion.contributor language="Mly"
                                implementationClass="com.reason.ide.insight.OclKeywordCompletionContributor"/>

        <languageInjector implementation="com.reason.ide.js.JsInjector"/>
        <lang.elementManipulator forClass="com.reason.lang.core.psi.impl.RPsiLiteralString"
                                 implementationClass="com.reason.lang.core.LiteralStringManipulator"/>

        <!--
         | Templates
         -->

        <liveTemplateContext contextId="REASON_CODE"
                             implementation="com.reason.ide.template.RmlBaseLiveTemplateContextType"/>
        <defaultLiveTemplates file="liveTemplates/Reason.xml"/>

        <liveTemplateContext contextId="RESCRIPT_CODE"
                             implementation="com.reason.ide.template.ResBaseLiveTemplateContextType"/>
        <defaultLiveTemplates file="liveTemplates/Rescript.xml"/>

        <liveTemplateContext contextId="OCAML"
                             implementation="com.reason.ide.template.OCamlBaseLiveTemplateContextType"/>
        <liveTemplateContext contextId="OCAML_CODE" baseContextId="OCAML"
                             implementation="com.reason.ide.template.OCamlCodeLiveTemplateContextType"/>
        <liveTemplateContext contextId="OCAML_COMMENT" baseContextId="OCAML"
                             implementation="com.reason.ide.template.OCamlCommentLiveTemplateContextType"/>
        <defaultLiveTemplates file="liveTemplates/OCaml.xml"/>

        <!--
         | Intentions
         -->

        <intentionAction>
            <className>com.reason.ide.intentions.FunctionBracesIntention</className>
        </intentionAction>
        <intentionAction>
            <className>com.reason.ide.intentions.ExpandLocalOpenIntention</className>
        </intentionAction>

        <!--
         | Spellchecker
         -->

        <spellchecker.support language="OCaml"
                              implementationClass="com.reason.ide.spellcheckers.OclSpellCheckerStrategy"/>
        <spellchecker.support language="Reason"
                              implementationClass="com.reason.ide.spellcheckers.RmlSpellCheckerStrategy"/>
        <spellchecker.support language="Rescript"
                              implementationClass="com.reason.ide.spellcheckers.ResSpellCheckerStrategy"/>

        <!--
         | UI
         -->

        <toolWindow id="BuckleScript:" factoryClass="com.reason.ide.console.bs.BsToolWindowFactory"
                    anchor="bottom" icon="com.reason.ide.ORIcons.BUCKLESCRIPT_TOOL"/>
        <toolWindow id="Rescript:" factoryClass="com.reason.ide.console.rescript.RescriptToolWindowFactory"
                    anchor="bottom" icon="com.reason.ide.ORIcons.RESCRIPT_TOOL"/>
        <toolWindow id="Dune:" factoryClass="com.reason.ide.console.dune.DuneToolWindowFactory"
                    anchor="bottom" icon="com.reason.ide.ORIcons.DUNE_TOOL"/>

        <!-- <codeInsight.typeInfo language="Reason" implementationClass="com.reason.ide.hints.RmlTypeProvider"/> ctrl-shift-p -->
        <codeInsight.parameterInfo language="Reason"
                                   implementationClass="com.reason.ide.hints.RmlParameterInfoHandler"/>
        <codeInsight.parameterInfo language="Rescript"
                                   implementationClass="com.reason.ide.hints.ResParameterInfoHandler"/>
        <codeInsight.parameterInfo language="OCaml"
                                   implementationClass="com.reason.ide.hints.OclParameterInfoHandler"/>

        <consoleFilterProvider implementation="com.reason.ide.console.ORConsoleFilterProvider"/>
        <editorFactoryListener implementation="com.reason.ide.OREditorFactoryListener"/>

        <moduleRendererFactory implementation="com.reason.ide.go.FileModuleDataModuleRendererFactory"/>

        <!-- Gutter icons -->

        <codeInsight.lineMarkerProvider language="OCaml"
                                        implementationClass="com.reason.ide.go.ORLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="Reason"
                                        implementationClass="com.reason.ide.go.ORLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="Rescript"
                                        implementationClass="com.reason.ide.go.ORLineMarkerProvider"/>
    </extensions>

</idea-plugin>
